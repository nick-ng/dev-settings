## git ##
alias gin='gidefault && git remote prune origin && git pull && git checkout -b'

alias giclear='echo "\ngit branch | grep \"^[^*]\" | xargs git branch -d\n"'
alias gipush='git branch | grep "* " | awk "{print \$2}" | xargs git push --set-upstream origin '
alias gitpush='npm test && git branch | grep "* " | awk "{print \$2}" | xargs git push --set-upstream origin '
alias todo="git grep -n \"@todo\" -- ':!todo.sh' ':!package.json' ':!README.md' | sed 's/^/- /m ; s/\/\/ @/ @/m ; s/\s\+/ /gm'"

function giap() {
  if [ -f ./todo.sh ]; then
    ./todo.sh
  fi

  git add -N .
  git add -p

  todo
}

function gidefault() {
  origin_name=$(git remote show)
  default_branch_name=$(git remote show $origin_name | sed -n '/HEAD branch/s/.*: //p')
  git checkout $default_branch_name
}

function gipurge() {
  echo "Getting default branch name"
  origin_name=$(git remote show)
  default_branch_name=$(git remote show $origin_name | sed -n '/HEAD branch/s/.*: //p')
  echo "Default branch is $default_branch_name"
  git checkout $default_branch_name
  git remote prune $origin_name
  git pull
  git fetch -p
  git branch -vv | grep ": gone]" | awk "{print \$1}" | xargs git branch -D
  echo 'All done'
}

function girebase() {
  echo "Getting default branch name"
  origin_name=$(git remote show)
  default_branch_name=$(git remote show $origin_name | sed -n '/HEAD branch/s/.*: //p')
  echo "Default branch is $default_branch_name"
  git checkout $default_branch_name
  git remote prune $origin_name
  git pull
  git checkout -
  git rebase $default_branch_name
}

## node js ##
alias npmscripts='cat package.json | jq .scripts'
