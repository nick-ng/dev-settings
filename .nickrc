## git ##
alias gin='gidefault && git remote prune origin && git pull && git switch -c'

alias giclear='echo "\ngit branch | grep \"^[^*]\" | xargs git branch -d\n"'
alias gipush='git branch | grep "* " | awk "{print \$2}" | xargs git push --set-upstream origin '
alias gitpush='npm test && git branch | grep "* " | awk "{print \$2}" | xargs git push --set-upstream origin '
alias todo="rg '@todo' -n -g '!todo.sh' -g '!package.json' -g '!README.md' | sed 's/:.*@todo/: @todo/m ; s/--*> *$//m ; s/^/- /m ; s/\s\+/ /gm'"

function giap() {
  if [ -f ./todo.sh ]; then
    ./todo.sh
  fi

  git add -N .
  git add -p

  todo
}

function gidefault() {
  echo "Getting default branch name"
  origin_name=$(git remote show)
  default_branch_name=$(git remote show "$origin_name" | sed -n '/HEAD branch/s/.*: //p')
  echo "Default branch is $default_branch_name"
  git switch $default_branch_name
}

function gipurge() {
  echo "Getting default branch name"
  origin_name=$(git remote show)
  default_branch_name=$(git remote show $origin_name | sed -n '/HEAD branch/s/.*: //p')
  echo "Default branch is $default_branch_name"
  git switch $default_branch_name
  git remote prune $origin_name
  git pull
  git fetch -p
  git branch -vv | grep ": gone]" | awk "{print \$1}" | xargs git branch -D
  echo 'All done'
}

function girebase() {
  echo "Getting default branch name"
  origin_name=$(git remote show)
  default_branch_name=$(git remote show "$origin_name" | sed -n '/HEAD branch/s/.*: //p')
  echo "Default branch is $default_branch_name"
  git switch $default_branch_name
  git remote prune $origin_name
  git pull
  git switch -
  git rebase $default_branch_name
}

## node js ##
alias npmscripts='cat package.json | jq .scripts'
alias nr="npm run"

## dev environment ##
alias cdnvimconf='cd "${XDG_CONFIG_HOME:-$HOME/.config}"/nvim'
function updatealldevsettings() {
		  CURRENT_DIR=$(pwd)
		  cdnvimconf
		  git pull --rebase
		  # change directory to dev-settings
		  cd "$(readlink ~/.nickrc | sed s/\.nickrc//)" || return
		  git pull --rebase
		  cd "$CURRENT_DIR" || return
}
alias upgradealldevsettings=updatealldevsettings

## tmux ##
# copy tmux buffer to OS buffer
alias tclip='tmux save-buffer - | xclip -selection clipboard'

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vi'
else
  export EDITOR=$(which nvim)
fi
